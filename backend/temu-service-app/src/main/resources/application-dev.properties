server.port=9800
spring.application.name=tcec-protocol-service

# grpc
grpc.server.port=9099
grpc.server.address=*
grpc.server.maxInboundMessageSize=1016759950
grpc.server.security.enabled=false
grpc.server.health-service-enabled=true

grpc.client.tcecSecretsManagementServiceBlockingStub.address=static://localhost:9098
grpc.client.tcecSecretsManagementServiceBlockingStub.enableKeepAlive=true
grpc.client.tcecSecretsManagementServiceBlockingStub.keepAliveWithoutCalls=true
grpc.client.tcecSecretsManagementServiceBlockingStub.negotiationType=PLAINTEXT
grpc.client.trafficMetricsService.address=static://localhost:9098
grpc.client.trafficMetricsService.enableKeepAlive=true
grpc.client.trafficMetricsService.keepAliveWithoutCalls=true
grpc.client.trafficMetricsService.negotiationType=PLAINTEXT

## local in-progress
grpc.server.in-process-name=tcecProtocolService
grpc.client.authTokenServiceBlockingStub.address=in-process:tcecProtocolService
grpc.client.incomingRequestDecryptServiceBlockingStub.address=in-process:tcecProtocolService
grpc.client.incomingResponseDecryptServiceBlockingStub.address=in-process:tcecProtocolService
grpc.client.outgoingRequestEncryptServiceBlockingStub.address=in-process:tcecProtocolService
grpc.client.outgoingResponseEncryptServiceBlockingStub.address=in-process:tcecProtocolService

# Metrics
#management.endpoints.web.exposure.include=health,info,prometheus
management.endpoints.web.exposure.include=*
# spring.jpa.properties[hibernate.generate_statistics]=true
management.info.defaults.enabled=true


spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, \
  org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, \
  org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration